[{"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/index.js":"1","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/serviceWorker.js":"2","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/App.js":"3","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/blocks/customblocks.js":"4","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/generator/generator.js":"5","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/Blockly/index.js":"6","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/fields/BlocklyReactField.jsx":"7","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/fields/DateField.jsx":"8","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/Blockly/BlocklyComponent.jsx":"9"},{"size":500,"mtime":1648331761695,"results":"10","hashOfConfig":"11"},{"size":4951,"mtime":1648267408747,"results":"12","hashOfConfig":"11"},{"size":3955,"mtime":1648331761695,"results":"13","hashOfConfig":"11"},{"size":2660,"mtime":1648331671272,"results":"14","hashOfConfig":"11"},{"size":8374,"mtime":1648331722607,"results":"15","hashOfConfig":"11"},{"size":1657,"mtime":1648267408746,"results":"16","hashOfConfig":"11"},{"size":1915,"mtime":1648267408746,"results":"17","hashOfConfig":"11"},{"size":1610,"mtime":1648267408746,"results":"18","hashOfConfig":"11"},{"size":8668,"mtime":1648331722606,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b5xhwm",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/index.js",[],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/serviceWorker.js",[],["40","41"],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/App.js",["42"],"/**\n * @license\n *\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Main React component that includes the Blockly component.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport React from \"react\";\nimport \"./App.css\";\n\nimport logo from \"./logo.svg\";\n\nimport BlocklyComponent, { Block, Value, Field, Shadow } from \"./Blockly\";\n\nimport BlocklyJS from \"blockly/javascript\";\n\nimport \"./blocks/customblocks\";\nimport \"./generator/generator\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.simpleWorkspace = React.createRef();\n    this.state = { code: \"\", renderedCode: \"\" };\n  }\n\n  componentDidMount() {\n    this.simpleWorkspace.current.workspace.addChangeListener(this.generateCode);\n  }\n\n  generateCode = (event) => {\n    var code = BlocklyJS.workspaceToCode(\n      this.simpleWorkspace.current.workspace\n    );\n    this.setState({ renderedCode: code });\n    console.log(code);\n  };\n\n  //whenever the ref changes, console.log the code\n  onRefChange = (node) => {\n    console.log(\"onRefChange\");\n    console.log(node);\n  };\n\n  render() {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <div className=\"flex-child\" style={{ height: \"100vh\", width: \"70vw\" }}>\n          <BlocklyComponent\n            ref={this.simpleWorkspace}\n            readOnly={false}\n            trashcan={true}\n            media={\"media/\"}\n            move={{\n              scrollbars: true,\n              drag: true,\n              wheel: true,\n            }}\n            initialXml={`\n          <xml xmlns=\"http://www.w3.org/1999/xhtml\">\n          </xml>\n                `}\n          >\n            <Block type=\"test_react_field\" />\n            <Block type=\"test_react_date_field\" />\n            <Block type=\"controls_ifelse\" />\n            <Block type=\"logic_compare\" />\n            <Block type=\"logic_operation\" />\n            <Block type=\"controls_repeat_ext\">\n              <Value name=\"TIMES\">\n                <Shadow type=\"math_number\">\n                  <Field name=\"NUM\">10</Field>\n                </Shadow>\n              </Value>\n            </Block>\n            <Block type=\"logic_operation\" />\n            <Block type=\"logic_negate\" />\n            <Block type=\"logic_boolean\" />\n            <Block type=\"logic_null\" disabled=\"true\" />\n            <Block type=\"logic_ternary\" />\n            <Block type=\"text_charAt\">\n              <Value name=\"VALUE\">\n                <Block type=\"variables_get\">\n                  <Field name=\"VAR\">text</Field>\n                </Block>\n              </Value>\n            </Block>\n          </BlocklyComponent>\n        </div>\n        <div\n          className=\"flex-child\"\n          style={{ maxWidth: \"30vw\", color: \"white\", backgroundColor: \"black\" }}\n        >\n          {this.state.renderedCode.split(\"\\n\").map((line, i) => {\n            return (\n              <p style={{ color: \"white\" }} key={i}>\n                {line}\n                <br />\n              </p>\n            );\n          }, this)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/blocks/customblocks.js",[],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/generator/generator.js",["43","44","45"],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/Blockly/index.js",[],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/fields/BlocklyReactField.jsx",[],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/fields/DateField.jsx",[],"/Users/adriangri/Desktop/TerrAble Hackathon/TerrAble/react-side/src/Blockly/BlocklyComponent.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":27,"column":8,"nodeType":"52","messageId":"53","endLine":27,"endColumn":12},{"ruleId":"54","severity":1,"message":"55","line":87,"column":11,"nodeType":"52","messageId":"56","endLine":87,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":107,"column":45,"nodeType":"59","messageId":"60","endLine":107,"endColumn":47},{"ruleId":"54","severity":1,"message":"61","line":167,"column":14,"nodeType":"52","messageId":"56","endLine":167,"endColumn":15},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-redeclare","'repeats' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is already defined.","no-global-assign","no-unsafe-negation"]